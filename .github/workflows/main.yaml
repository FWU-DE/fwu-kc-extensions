name: "Test and deploy"
on:
  push:
    branches:
      - main
      - release/*
    paths:
      - 'pom.xml'
      - '*/pom.xml'
      - '.github/workflows/main.yaml'

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Build with Maven
        run: mvn --batch-mode package

  publish:
    needs: package
    outputs:
      published_version: ${{ steps.get-version.outputs.info }}
      keycloak_version: ${{ steps.get-keycloak-version.outputs.info }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Get maven group
        id: get-group
        uses: mavrosxristoforos/get-xml-info@1.0
        with:
          xml-file: 'pom.xml'
          xpath: "//*[local-name()='project']/*[local-name()='groupId']"
      - name: Get version
        id: get-version
        uses: mavrosxristoforos/get-xml-info@1.0
        with:
          xml-file: 'pom.xml'
          xpath: "//*[local-name()='project']/*[local-name()='properties']/*[local-name()='revision']"
      - name: Get keycloak version
        id: get-keycloak-version
        uses: mavrosxristoforos/get-xml-info@1.0
        with:
          xml-file: 'pom.xml'
          xpath: "//*[local-name()='project']/*[local-name()='properties']/*[local-name()='keycloak.version']"
      - name: Check release exists
        id: check-release
        run: |
          TAG=${{ steps.get-version.outputs.info }}
          echo "TAG: $TAG"
          response=$(curl --silent -H 'Accept: application/vnd.github.v3+json' "https://api.github.com/repos/FWU-DE/fwu-kc-extensions/releases/tags/$TAG")
          message=$(echo $response | jq -r .message)
          echo "Message: $message"
          if [ "$message" = "Not Found" ]; then
            echo "version=$TAG" >> $GITHUB_OUTPUT
          else
            echo "Release $TAG already exists!"
          fi
      - name: Deploy to GitHub and GitLab packages
        if: ${{ steps.check-release.outputs.version != '' }}
        run: mvn --batch-mode clean deploy -DskipTests -s ci_settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLAB_HOST: ${{ secrets.GITLAB_HOST }}
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
          GITLAB_PROJECT_ID: ${{ secrets.GITLAB_PROJECT_ID }}
      - name: Publish GitHub release
        if: ${{ steps.check-release.outputs.version != '' }}
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.check-release.outputs.version }}
          artifacts: "target/*.jar"
          replacesArtifacts: true
          bodyFile: "CHANGELOG.md"
          token: ${{ secrets.GITHUB_TOKEN }}

  startImageBuild:
    needs: publish
    if: ${{ needs.publish.outputs.published_version }} != ""
    runs-on: ubuntu-latest
    steps:
      - name: Trigger image build and deployment on Gitlab
        env:
          GITLAB_TRIGGER_TOKEN: ${{ secrets.GITLAB_TRIGGER_TOKEN }}
          GITLAB_PROJECT_ID: ${{ secrets.GITLAB_PROJECT_ID  }}
          VERSION: ${{ needs.publish.outputs.published_version }}
          KEYCLOAK_VERSION: ${{ needs.publish.outputs.keycloak_version }}
        run: curl -X POST --fail -F token=${GITLAB_TRIGGER_TOKEN} -F ref=main -F "variables[keycloak_version]=${KEYCLOAK_VERSION}" -F "variables[extensions_version]=${VERSION}" "https://gitlab.com/api/v4/projects/${GITLAB_PROJECT_ID}/trigger/pipeline"

