name: "Release snapshot"
on:
  push:
    tags:
      - '*-SNAPSHOT'

jobs:
  publish:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Deploy to GitHub packages
        run: mvn --batch-mode deploy -DprojectVersion=$GITHUB_REF_NAME -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get module names
        id: get-modules
        run: |
          echo "version=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
          modules=$(mvn -Dexec.executable='echo' -Dexec.args='${project.artifactId}' -DprojectVersion=$GITHUB_REF_NAME exec:exec -q)
          for module in $modules
          do
            if [ "$module" != "fwu-kc-extensions" ]; then
              echo "$module/target/$module-$GITHUB_REF_NAME.jar" >> modules.txt
            fi
          done
          csv=$(paste -s -d , modules.txt)
          echo "artifacts=$csv" >> $GITHUB_OUTPUT
      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.get-modules.outputs.version }}
          artifacts: "${{ steps.get-modules.outputs.artifacts }}"
          bodyFile: "CHANGELOG.md"
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          allowUpdates: true
      - name: Publish to gitlab
        env:
          GITLAB_HOST: ${{ secrets.GITLAB_HOST }}
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
          GITLAB_PROJECT_ID: ${{ secrets.GITLAB_PROJECT_ID  }}
          ARTIFACTS: "${{ steps.get-modules.outputs.artifacts }}"
          VERSION: $GITHUB_REF_NAME
        run: |
          group=$(mvn -N -Dexec.executable='echo' -Dexec.args='${project.groupId}' exec:exec -q)
          group=${group/.//}
          echo "group: ${group}"
          IFS=',' 
          read -ra archives <<< $ARTIFACTS
          for archive in ${archives[@]}
          do
              filename=${archive##*/}
              artifact=${filename%-*}
              curl --request PUT \
                  --upload-file ${archive} \
                  --header "Deploy-Token: ${GITLAB_TOKEN}" \
                  "https://${GITLAB_HOST}/api/v4/projects/${GITLAB_PROJECT_ID}/packages/maven/${group}/${artifact}/${VERSION}/${filename}"
          done
